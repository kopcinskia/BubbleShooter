var BubbleShoot=window.BubbleShoot||{}
BubbleShoot.Board=(function($){let NUM_ROWS=9,NUM_COLS=32,Board=function(){let that=this,rows=createLayout()
this.getRows=function(){return rows}
this.addBubble=function(bubble,coords){let rowNum=Math.floor(coords.y/BubbleShoot.ui.ROW_HEIGHT),colNum=coords.x/BubbleShoot.ui.BUBBLE_DIMS*2
if(rowNum%2==1)colNum-=1
colNum=Math.round(colNum/2)*2;if(rowNum%2==0)colNum-=1
if(!rows[rowNum])rows[rowNum]=[]
rows[rowNum][colNum]=bubble
bubble.setRow(rowNum)
bubble.setCol(colNum)}
this.getBubbleAt=function(rowNum,colNum){if(!this.getRows()[rowNum])return null
return this.getRows()[rowNum][colNum]}
this.getBubblesAround=function(curRow,curCol){let bubbles=[]
for(let rowNum=curRow-1;rowNum<=curRow+1;rowNum++){for(let colNum=curCol-2;colNum<=curCol+2;colNum++){let bubbleAt=that.getBubbleAt(rowNum,colNum)
if(bubbleAt&&!(colNum==curCol&&rowNum==curRow))bubbles.push(bubbleAt)}}return bubbles}
this.getGroup=function(bubble,found,differentColor){let curRow=bubble.getRow()
if(!found[curRow])found[curRow]={}
if(!found.list)found.list=[]
if(found[curRow][bubble.getCol()]){return found}found[curRow][bubble.getCol()]=bubble
found.list.push(bubble)
let curCol=bubble.getCol(),surrounding=that.getBubblesAround(curRow,curCol);for(let i=0;i<surrounding.length;i++){let bubbleAt=surrounding[i]
if(bubbleAt.getType()==bubble.getType()||differentColor){found=that.getGroup(bubbleAt,found,differentColor)}}return found}
this.popBubbleAt=function(rowNum,colNum){let row=rows[rowNum]
delete row[colNum]}
this.findOrphans=function(){let connected=[],groups=[],rows=that.getRows()
for(let i=0;i<rows.length;i++){connected[i]=[]}for(let i=0;i<rows[0].length;i++){let bubble=that.getBubbleAt(0,i)
if(bubble&&!connected[0][i]){let group=that.getGroup(bubble,{},true)
$.each(group.list,function(){connected[this.getRow()][this.getCol()]=true})}}let orphaned=[]
for(let i=0;i<rows.length;i++){for(let j=0;j<rows[i].length;j++){let bubble=that.getBubbleAt(i,j)
if(bubble&&!connected[i][j]){orphaned.push(bubble)}}}return orphaned}
this.getBubbles=function(){let bubbles=[],rows=this.getRows()
for(let i=0;i<rows.length;i++){let row=rows[i]
for(let j=0;j<row.length;j++){let bubble=row[j]
if(bubble){bubbles.push(bubble)}}}return bubbles}
this.isEmpty=function(){return this.getBubbles().length==0}
return this}
let createLayout=function(){let rows=[]
for(let i=0;i<NUM_ROWS;i++){let row=[],startCol=i%2==0?1:0
for(let j=startCol;j<NUM_COLS;j+=2){let bubble=BubbleShoot.Bubble.create(i,j)
bubble.setState(BubbleShoot.BubbleState.ON_BOARD)
if(BubbleShoot.Renderer){let left=j*BubbleShoot.ui.BUBBLE_DIMS/2,top=i*BubbleShoot.ui.ROW_HEIGHT
bubble.getSprite().setPosition({left:left,top:top})}row[j]=bubble}rows.push(row)}return rows}
return Board})(jQuery)